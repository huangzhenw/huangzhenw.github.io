{"name":"JavaScript","slug":"JavaScript","count":3,"postlist":[{"title":"闭包的概念及应用场景","uid":"00e349f9550fff228219dd858f639da6","slug":"javascript/bibao","date":"2021-09-26T12:30:40.078Z","updated":"2021-09-22T07:06:46.243Z","comments":true,"path":"api/articles/javascript/bibao.json","keywords":null,"cover":null,"text":"闭包的概念一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）。也就是说，闭包让你可以在一个内层函数中访问到其外层函数的作用域。在 JavaScript 中，每当创建一个函数，闭包...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"web","slug":"web","count":5,"path":"api/categories/web.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"}],"author":{"name":"黄振威","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3597257778138808","customs":{}}}},{"title":"浅谈JS运行机制，宏任务，微任务","uid":"b4572855b594ba24ba1854f956bab41e","slug":"javascript/jsyxjz","date":"2021-09-26T12:30:40.082Z","updated":"2021-09-22T07:06:56.893Z","comments":true,"path":"api/articles/javascript/jsyxjz.json","keywords":null,"cover":null,"text":"JS 单线程先聊聊JS的单线程工作，单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。 那怎么样解决这种问题呢，在浏览器平台下，浏览器底层开启了多线程去执行了一些任务，形成了我们常说的异步任务，比如说定时器s...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"web","slug":"web","count":5,"path":"api/categories/web.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"}],"author":{"name":"黄振威","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3597257778138808","customs":{}}},"feature":true},{"title":"Promise原理分析、手写Promise简易版","uid":"aebc5a3f3b331af7862288aae1caccd0","slug":"javascript/promise","date":"2021-09-26T12:30:40.085Z","updated":"2021-09-22T07:07:04.285Z","comments":true,"path":"api/articles/javascript/promise.json","keywords":null,"cover":null,"text":"一、前言Promise灵魂三问：是什么？做什么？怎么做？ 是什么？—-Promise 是异步编程的一种解决方案，ES6新增的一个对象，用来传递异步操作的消息。它代表了某个未来才会知道结果的事件（通常是一个异步操作），并且这个事件提供统一的 API，可供进一步处理。 做什么？—-P...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"web","slug":"web","count":5,"path":"api/categories/web.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":3,"path":"api/tags/JavaScript.json"}],"author":{"name":"黄振威","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3597257778138808","customs":{}}},"feature":true}]}